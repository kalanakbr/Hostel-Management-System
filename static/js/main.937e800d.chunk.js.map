{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/auth/Message.js","components/auth/Progress.js","components/auth/Upload.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","combineReducers","auth","state","arguments","action","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","e","preventDefault","this","props","_this$props$auth","authLinks","react_default","a","createElement","className","href","onClick","onLogoutClick","bind","src","profilePicture","alt","name","style","width","marginRight","title","guestLinks","react_router_dom","to","height","data-toggle","data-target","id","Component","connect","Footer","Date","getFullYear","Landing","history","push","fontSize","react_live_clock_lib_default","format","ticking","timezone","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","regNo","faculty","hall","contactNo","guardianName","guardianTel","password","password2","onChange","assertThisInitialized","onSubmit","nextProps","setState","defineProperty","target","newUser","registerUser","classnames","is-invalid","placeholder","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","setItem","jwt_decode","Message","_ref","msg","class","role","data-dismiss","aria-label","aria-hidden","Progress","percentage","concat","_useState","useState","_useState2","slicedToArray","file","setFile","_useState3","_useState4","filename","setFilename","_useState5","_useState6","uploadedFile","setUploadedFile","_useState7","_useState8","message","setMessage","_useState9","_useState10","uploadPercentage","setUploadPercentage","asyncToGenerator","regenerator_default","mark","_callee","formData","_res$data","fileName","filePath","wrap","_context","prev","next","FormData","append","Content-Type","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","sent","t0","status","stop","_x","react","auth_Message","files","htmlFor","auth_Progress","color","jwtToken","currentTime","now","exp","location","App","es","layout_Navbar","react_router","exact","path","component","Upload","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.937e800d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        //Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }else { \r\n        //Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\n//Register User\r\nexport const registerUser= (userData, history) => dispatch => {\r\n    axios.post('/api/users/register', userData)\r\n        .then(res => history.push('/upload'))\r\n        .catch(err =>\r\n            dispatch({\r\n                type : GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n            );\r\n};\r\n\r\n//Login -Get User token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post('/api/users/login', userData)\r\n        .then(res => {\r\n            //Save to localStorage\r\n            const { token } = res.data;\r\n            //Set token to localStorage\r\n            localStorage.setItem('jwtToken', token);\r\n            //Set token to Auth header\r\n            setAuthToken(token);\r\n            //Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            //Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err => \r\n            dispatch({\r\n                type : GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//Set logged in user(already logged)\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type : SET_CURRENT_USER,\r\n        payload : decoded\r\n    }\r\n}\r\n\r\n//Log user out\r\nexport const logoutUser = () => dispatch => { \r\n    //Remove token from localStorage\r\n    localStorage.removeItem('jwtToken');\r\n    //Remove auth header for future requests\r\n    setAuthToken(false);\r\n    //Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n","const  isEmpty = (value) =>\r\n        value === undefined || \r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;      ","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-empty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user:{}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER :\r\n            return{\r\n            ...state,\r\n            isAuthenticated: !isEmpty(action.payload),\r\n            user: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {  }\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n});\r\n\r\n","import { createStore, applyMiddleware ,compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default  store;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions/authActions';\r\n\r\nclass Navbar extends Component {\r\n\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  }\r\n  render() { \r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = ( \r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <a href=\" \" \r\n          onClick={this.onLogoutClick.bind(this)}\r\n          className=\"nav-link\">\r\n           <img \r\n              src={user.profilePicture} \r\n              alt={user.name}\r\n              className=\"rounded-circle\"\r\n              style={{ width: '25px', marginRight:'5px'}} \r\n              title=\"You must have uploaded a profile picture\" />{' '}\r\n              Logout\r\n          </a>\r\n        </li>\r\n    </ul>\r\n    );\r\n\r\n    const guestLinks = ( \r\n      <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"https://www.pdn.ac.lk/academics/academics.php\" >\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/c/cc/University_of_Peradeniya_crest.png/220px-University_of_Peradeniya_crest.png\" alt=\"logo\" style={{width:'30px', height:'30px'}} ></img>\r\n            </a>\r\n          <Link className=\"navbar-brand\" to=\"/\">Hostel Management</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n    \r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/profiles\">Students\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          { isAuthenticated ? authLinks : guestLinks }\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Navbar);","import React from 'react'\r\n\r\nexport default  () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white bottom mt-5 p-1 text-center\">   \r\n        Copyright &copy; {new Date().getFullYear()} Hostel Management by Kalana \r\n     </footer>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Clock from 'react-live-clock';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if(this.props.auth.isAuthenticated){\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n              <h1 style={{fontSize:'8vw'}}>\r\n              <Clock className=\"ukFormat\" format={'hh:mm:ssa'} ticking={true} timezone={'Asia/Colombo'} />\r\n              </h1>\r\n                <h1 className=\"display-3 mb-4\">Hostel Management System\r\n                </h1>\r\n                <p className=\"lead\"> University of Peradeniya, Sri Lanka</p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">Sign Up</Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">Login</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../actions/authActions';\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            name:'',\r\n            regNo:'',\r\n            faculty:'',\r\n            hall:'',\r\n            contactNo:'',\r\n            guardianName:'',\r\n            guardianTel:'',\r\n            password:'',\r\n            password2:'',\r\n            profilePicture:'',\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\ncomponentDidMount() {\r\n        if(this.props.auth.isAuthenticated){\r\n          this.props.history.push('/upload');\r\n        }\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors){\r\n        this.setState({ errors: nextProps.errors});\r\n    }\r\n}\r\n\r\n// fileSelectedHandler = event => {\r\n//     this.setState({\r\n//         profilePicture: event.target.files[0]\r\n//     }) \r\n// }\r\n\r\n// fileUploadHandler = () => {\r\n//     const formData = new FormData()\r\n//     formData.append(\r\n//         'file',\r\n//         this.state.profilePicture,\r\n//         this.state.profilePicture.name\r\n//         );\r\n//     console.log(this.state.profilePicture)\r\n// } \r\n\r\nonChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n}\r\n\r\nonSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    // const formData = new FormData()\r\n    // formData.append(\r\n    //     'profilePicture',\r\n    //     this.state.profilePicture,\r\n    //     this.state.profilePicture.name\r\n    //     );\r\n\r\n    const newUser = {\r\n        name:this.state.name,\r\n        regNo: this.state.regNo,\r\n        faculty: this.state.faculty,\r\n        hall: this.state.hall,\r\n        contactNo: this.state.contactNo,\r\n        guardianName: this.state.guardianName,\r\n        guardianTel:this.state.guardianTel,\r\n        profilePicture: this.state.profilePicture,\r\n        password :this.state.password,\r\n        password2: this.state.password2,\r\n\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n    // console.log(newUser);\r\n   \r\n}\r\n  render() {\r\n\r\n    const { errors } = this.state; //const errors = this.state.errors;\r\n\r\n    return (\r\n        <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Please,Register for the university hostel management system</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.name\r\n                            })} \r\n                            placeholder=\"Name\" \r\n                            name=\"name\" \r\n                            value={this.state.name}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {errors.name && ( <div className=\"invalid-feedback\">{errors.name}</div>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.regNo\r\n                            })} \r\n                            placeholder=\"Registration No.\" \r\n                            value={this.state.regNo}\r\n                            name=\"regNo\" \r\n                            onChange={this.onChange}\r\n                        />\r\n                        {errors.regNo && ( <div className=\"invalid-feedback\">{errors.regNo}</div>)}\r\n                            <small className=\"form-text text-muted\">It should be appeared in your University identity card <br />\r\n                            Example:S/00/000)\r\n                            </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                         <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.faculty\r\n                            })} \r\n                            placeholder=\"Faculty\" \r\n                            value={this.state.faculty}\r\n                            name=\"faculty\" \r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.faculty && ( <div className=\"invalid-feedback\">{errors.faculty}</div>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.hall\r\n                            })}  \r\n                            placeholder=\"Hall\" \r\n                            value={this.state.hall}\r\n                            name=\"hall\" \r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.hall && ( <div className=\"invalid-feedback\">{errors.hall}</div>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.contactNo\r\n                            })} \r\n                            placeholder=\"Contact No:\"\r\n                            value={this.state.contactNo}\r\n                            name=\"contactNo\" \r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.contactNo && ( <div className=\"invalid-feedback\">{errors.contactNo}</div>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                         <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.guardianName\r\n                            })} \r\n                            placeholder=\"Guardian Name\" \r\n                            value={this.state.guardianName}\r\n                            name=\"guardianName\" \r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.guardianName && ( <div className=\"invalid-feedback\">{errors.guardianName}</div>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.guardianTel\r\n                            })} \r\n                            placeholder=\"Guardian Telephone No:\" \r\n                            value={this.state.guardianTel}\r\n                            name=\"guardianTel\" \r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.guardianTel && ( <div className=\"invalid-feedback\">{errors.guardianTel}</div>)}\r\n                    </div>\r\n                    \r\n                    {/* <div className=\"form-group\"> \r\n                        <input \r\n                            className={classnames(\"form-control form-control-lg mb-2\")} id=\"customFile\"\r\n                            type=\"file\" \r\n                            name=\"profilePicture\"\r\n                            placeholder=\"Picture\"\r\n                            onChange={this.fileSelectedHandler}/> */}\r\n                            {/* <label className={classnames(\"form-control form-control-lg\")} htmlFor=\"customFile\"></label> */}\r\n                            {/* <button \r\n                            onClick={this.fileUploadHandler}className={classnames(\"btn btn-primary btn-block mb-2\")}>Upload</button> */}\r\n                    {/* </div> */}\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"password\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.password\r\n                            })}  \r\n                            placeholder=\"Password\" \r\n                            value={this.state.password}\r\n                            name=\"password\"\r\n                            onChange={this.onChange}\r\n                             />\r\n                             {errors.password && ( <div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"password\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                'is-invalid': errors.password2\r\n                            })} \r\n                            placeholder=\"Confirm Password\"\r\n                            value={this.state.password2} \r\n                            name=\"password2\"\r\n                            onChange={this.onChange}\r\n                             />\r\n                             {errors.password2 && ( <div className=\"invalid-feedback\">{errors.password2}</div>)}\r\n                    </div>\r\n                      <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n})\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, {\r\n  Component\r\n} from 'react'\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/authActions'; \r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      regNo: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\ncomponentDidMount() {\r\n  if(this.props.auth.isAuthenticated){\r\n    this.props.history.push('/dashboard');\r\n  }\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n  if(nextProps.auth.isAuthenticated){\r\n    this.props.history.push('/dashboard');\r\n  }\r\n\r\n  if(nextProps.errors){\r\n    this.setState({ errors: nextProps.errors});\r\n  }\r\n}\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    const userData = {\r\n        regNo: this.state.regNo,\r\n        password :this.state.password\r\n    };\r\n    this.props.loginUser(userData);\r\n}\r\n  onChange(e){\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return ( \r\n      <div className=\"login\">\r\n      <div className=\"container\">\r\n       <div className=\"row\">\r\n         <div className=\"col-md-8 m-auto\">\r\n          <h1 className=\"display-4 text-center\">Log In</h1>\r\n          <p className=\"lead text-center\">Sign in to your Hostel Management account</p>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" \r\n                   className={classnames(\"form-control form-control-lg\", {\r\n                    'is-invalid': errors.regNo\r\n                })} \r\n                  placeholder=\"Registration No: (S/00/000)\" \r\n                  name=\"regNo\" \r\n                  value={this.state.regNo}\r\n                  onChange={this.onChange}\r\n                  />\r\n                  {errors.regNo && ( <div className=\"invalid-feedback\">{errors.regNo}</div>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"password\" \r\n                className={classnames(\"form-control form-control-lg\", {\r\n                  'is-invalid': errors.password\r\n              })}  \r\n                placeholder=\"Password\" \r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChange} \r\n                />\r\n                {errors.password && ( <div className=\"invalid-feedback\">{errors.password}</div>)}\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth:PropTypes.object.isRequired,\r\n  errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Message = ({ msg }) => {\r\n    return (\r\n        <div>\r\n            <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            { msg }\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMessage.propTypes = {\r\n    msg: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({ percentage }) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div\r\n        className='progress-bar progress-bar-striped bg-success'\r\n        role='progressbar'\r\n        style={{ width: `${percentage}%` }}\r\n      >\r\n        {percentage}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgress.propTypes = {\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Progress;","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\n\r\nconst Upload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    // const  onRegister = () => {\r\n    //   this.props.history.push('/login');\r\n    //  }\r\n    try {\r\n      const res = await axios.post('/api/users/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n\r\n          // Clear percentage\r\n          // setTimeout(() => setUploadPercentage(0), 10000);\r\n        }\r\n      })\r\n        \r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n      setMessage('File Uploaded,Please Click Register');\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage('There was a problem with the server');\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n<div className='container mt-4'>\r\n    <h4 className='display-4 text-center mb-4'>\r\n      <i className='fas fa-user-circle' /> Profile Picture\r\n    </h4>\r\n    \r\n  </div>\r\n      { message ? <Message msg= {message} /> : null}\r\n      <form onSubmit={onSubmit}>\r\n        <div className='custom-file mb-4'>\r\n          <input\r\n            type='file'\r\n            className='custom-file-input'\r\n            id='customFile'\r\n            onChange={onChange}\r\n          />\r\n          <label className='custom-file-label' htmlFor='customFile'>\r\n            {filename}\r\n          </label>\r\n          <small className=\"form-text text-muted\">Please, Upload your photo</small>\r\n        </div>\r\n\r\n        <Progress percentage={uploadPercentage} />\r\n\r\n        <input\r\n          type='submit'\r\n          value='Upload'\r\n          className='btn btn-primary btn-block mt-4'\r\n        />\r\n        \r\n      </form>\r\n      {uploadedFile ? (\r\n        <div className='row mt-5'>\r\n          <div className='col-md-6 m-auto'> \r\n            <img style={{ width: '100%'}}  className=\"rounded img-thumbnail\" src={uploadedFile.filePath} alt='' />\r\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n        <button color=\"primary\" className=\"btn btn-primary btn-block mt-4 px-4\"\r\n                // onClick={this.onRegister}\r\n                  >Register</button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Upload);","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Upload from './components/auth/Upload';\n\n\n\nimport './App.css';\n\n//Check for token\nif(localStorage.jwtToken){\n  //Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  //check for expired token\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    //Logout user\n    store.dispatch(logoutUser());\n    //clear current profile\n\n    //Redirect to '/'\n    window.location.href = '/';\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store= { store }>\n      <Router >\n        <div className=\"App\">\n          <Navbar />\n            <Route exact path=\"/\" component = { Landing } />\n              {/* half container */}\n              <div className=\"container\"> \n                <Route exact path=\"/register\" component={ Register }/>\n                <Route exact path =\"/upload\"component ={ Upload } />\n                <Route exact path=\"/login\" component={ Login }/>\n            </div>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}